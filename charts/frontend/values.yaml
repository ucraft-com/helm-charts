replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: 1.21

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

deployment:
  volumes:
    enabled: false
  extraVolumeMounts: []
extraVolumes: []
service:
  enabled: true
  name: http
  type: ClusterIP
  port: 80
  protocol: TCP

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: host.name.com
      paths:
      - path: /*
        backend:
          serviceName: ssl-redirect
          servicePort: use-annotation
      - backend:
          serviceName: uc-application
          servicePort: 80
        path: /*
  tls: []

resources: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nginx:
  enabled: false
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: "1.19"

  resources: {}
  extraVolumeMounts: []
  healthcheck:
    enabled: false
    period: 5
    path: /health
  config: |
    worker_processes auto;
        worker_rlimit_nofile 10240;

    events {
        use epoll;
        multi_accept on;
        worker_connections 2048;
        }

    http {
      server {
      listen 80 default_server;
      listen [::]:80 default_server;
      
        
        location / {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $host;
          
          proxy_pass http://127.0.0.1:3000/;
          
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
      }
    }

  exporter:
    enabled: false

    image:
      repository: nginx/nginx-prometheus-exporter
      pullPolicy: IfNotPresent
      tag: "0.9.0"

    resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

config: {}

containerPort: 80

livenessProbe: {}

readinessProbe: {}
envSecretName: {}

externalsecrets: {}

secretenv:
  enabled: false
  env: |
    APP_ENV=dev

env: dev
product: application
